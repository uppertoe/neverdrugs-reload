version: '3'

volumes:
  production_traefik: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: anaesthesia_never_drugs_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    volumes:
      - type: bind
        source: /home/uppertoe/ssl/postgresql/client
        target: /etc/ssl/postgresql
    environment:
      DB_SSLROOTCERT: /etc/ssl/postgresql/ca.crt
      DB_SSLCERT: /etc/ssl/postgresql/client.crt
      DB_SSLKEY: /etc/ssl/postgresql/client.key

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: anaesthesia_never_drugs_production_postgres
    volumes:
      - type: bind
        source: /var/lib/docker/pgdata/postgresql
        target: /var/lib/postgresql/data
      - type: bind
        source: /var/lib/docker/pgbackups/backups
        target: /backups
      - type: bind
        source: /home/uppertoe/ssl/postgresql/server
        target: /etc/ssl/postgresql
    env_file:
      - ./.envs/.production/.postgres
    environment:
      POSTGRES_SSL_KEY_FILE: /etc/ssl/postgresql/server.key
      POSTGRES_SSL_CERT_FILE: /etc/ssl/postgresql/server.crt
      POSTGRES_SSL: on

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: anaesthesia_never_drugs_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
      - '0.0.0.0:5555:5555'

  redis:
    image: docker.io/redis:6

  celeryworker:
    <<: *django
    image: anaesthesia_never_drugs_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: anaesthesia_never_drugs_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: anaesthesia_never_drugs_production_flower
    command: /start-flower

  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    environment:
      DB_SSLROOTCERT: /etc/ssl/postgresql/ca.crt
      DB_SSLCERT: /etc/ssl/postgresql/client.crt
      DB_SSLKEY: /etc/ssl/postgresql/client.key
    volumes:
      - type: bind
        source: /var/lib/docker/pgbackups/backups
        target: /backups:z
      - type: bind
        source: /home/uppertoe/ssl/postgresql/client
        target: /etc/ssl/postgresql
